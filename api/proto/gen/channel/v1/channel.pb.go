// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: channel/v1/channel.proto

package channelv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 消息定义
type Channel struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Avatar        string                 `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Channel) Reset() {
	*x = Channel{}
	mi := &file_channel_v1_channel_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Channel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Channel) ProtoMessage() {}

func (x *Channel) ProtoReflect() protoreflect.Message {
	mi := &file_channel_v1_channel_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Channel.ProtoReflect.Descriptor instead.
func (*Channel) Descriptor() ([]byte, []int) {
	return file_channel_v1_channel_proto_rawDescGZIP(), []int{0}
}

func (x *Channel) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Channel) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Channel) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

type ChannelPersonalInfo struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Note              string                 `protobuf:"bytes,1,opt,name=note,proto3" json:"note,omitempty"`
	NicknameInChannel string                 `protobuf:"bytes,2,opt,name=nickname_in_channel,json=nicknameInChannel,proto3" json:"nickname_in_channel,omitempty"`
	Priority          int64                  `protobuf:"varint,3,opt,name=priority,proto3" json:"priority,omitempty"`
	Mute              bool                   `protobuf:"varint,4,opt,name=mute,proto3" json:"mute,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ChannelPersonalInfo) Reset() {
	*x = ChannelPersonalInfo{}
	mi := &file_channel_v1_channel_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChannelPersonalInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelPersonalInfo) ProtoMessage() {}

func (x *ChannelPersonalInfo) ProtoReflect() protoreflect.Message {
	mi := &file_channel_v1_channel_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelPersonalInfo.ProtoReflect.Descriptor instead.
func (*ChannelPersonalInfo) Descriptor() ([]byte, []int) {
	return file_channel_v1_channel_proto_rawDescGZIP(), []int{1}
}

func (x *ChannelPersonalInfo) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *ChannelPersonalInfo) GetNicknameInChannel() string {
	if x != nil {
		return x.NicknameInChannel
	}
	return ""
}

func (x *ChannelPersonalInfo) GetPriority() int64 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *ChannelPersonalInfo) GetMute() bool {
	if x != nil {
		return x.Mute
	}
	return false
}

type CreateChannelRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	UserId        int64                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateChannelRequest) Reset() {
	*x = CreateChannelRequest{}
	mi := &file_channel_v1_channel_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateChannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateChannelRequest) ProtoMessage() {}

func (x *CreateChannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_channel_v1_channel_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateChannelRequest.ProtoReflect.Descriptor instead.
func (*CreateChannelRequest) Descriptor() ([]byte, []int) {
	return file_channel_v1_channel_proto_rawDescGZIP(), []int{2}
}

func (x *CreateChannelRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateChannelRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type CreateChannelResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Channel       *Channel               `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateChannelResponse) Reset() {
	*x = CreateChannelResponse{}
	mi := &file_channel_v1_channel_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateChannelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateChannelResponse) ProtoMessage() {}

func (x *CreateChannelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_channel_v1_channel_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateChannelResponse.ProtoReflect.Descriptor instead.
func (*CreateChannelResponse) Descriptor() ([]byte, []int) {
	return file_channel_v1_channel_proto_rawDescGZIP(), []int{3}
}

func (x *CreateChannelResponse) GetChannel() *Channel {
	if x != nil {
		return x.Channel
	}
	return nil
}

type GetInviteLinkRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChannelId     int64                  `protobuf:"varint,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	UserId        int64                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetInviteLinkRequest) Reset() {
	*x = GetInviteLinkRequest{}
	mi := &file_channel_v1_channel_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetInviteLinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInviteLinkRequest) ProtoMessage() {}

func (x *GetInviteLinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_channel_v1_channel_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInviteLinkRequest.ProtoReflect.Descriptor instead.
func (*GetInviteLinkRequest) Descriptor() ([]byte, []int) {
	return file_channel_v1_channel_proto_rawDescGZIP(), []int{4}
}

func (x *GetInviteLinkRequest) GetChannelId() int64 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *GetInviteLinkRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetInviteLinkResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Link          string                 `protobuf:"bytes,1,opt,name=link,proto3" json:"link,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetInviteLinkResponse) Reset() {
	*x = GetInviteLinkResponse{}
	mi := &file_channel_v1_channel_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetInviteLinkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInviteLinkResponse) ProtoMessage() {}

func (x *GetInviteLinkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_channel_v1_channel_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInviteLinkResponse.ProtoReflect.Descriptor instead.
func (*GetInviteLinkResponse) Descriptor() ([]byte, []int) {
	return file_channel_v1_channel_proto_rawDescGZIP(), []int{5}
}

func (x *GetInviteLinkResponse) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

type JoinChannelRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChannelId     int64                  `protobuf:"varint,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	UserId        int64                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JoinChannelRequest) Reset() {
	*x = JoinChannelRequest{}
	mi := &file_channel_v1_channel_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinChannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinChannelRequest) ProtoMessage() {}

func (x *JoinChannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_channel_v1_channel_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinChannelRequest.ProtoReflect.Descriptor instead.
func (*JoinChannelRequest) Descriptor() ([]byte, []int) {
	return file_channel_v1_channel_proto_rawDescGZIP(), []int{6}
}

func (x *JoinChannelRequest) GetChannelId() int64 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *JoinChannelRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type JoinChannelResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JoinChannelResponse) Reset() {
	*x = JoinChannelResponse{}
	mi := &file_channel_v1_channel_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinChannelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinChannelResponse) ProtoMessage() {}

func (x *JoinChannelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_channel_v1_channel_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinChannelResponse.ProtoReflect.Descriptor instead.
func (*JoinChannelResponse) Descriptor() ([]byte, []int) {
	return file_channel_v1_channel_proto_rawDescGZIP(), []int{7}
}

type JoinChannelByLinkRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Link          string                 `protobuf:"bytes,1,opt,name=link,proto3" json:"link,omitempty"`
	UserId        int64                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JoinChannelByLinkRequest) Reset() {
	*x = JoinChannelByLinkRequest{}
	mi := &file_channel_v1_channel_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinChannelByLinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinChannelByLinkRequest) ProtoMessage() {}

func (x *JoinChannelByLinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_channel_v1_channel_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinChannelByLinkRequest.ProtoReflect.Descriptor instead.
func (*JoinChannelByLinkRequest) Descriptor() ([]byte, []int) {
	return file_channel_v1_channel_proto_rawDescGZIP(), []int{8}
}

func (x *JoinChannelByLinkRequest) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *JoinChannelByLinkRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type JoinChannelByLinkResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JoinChannelByLinkResponse) Reset() {
	*x = JoinChannelByLinkResponse{}
	mi := &file_channel_v1_channel_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinChannelByLinkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinChannelByLinkResponse) ProtoMessage() {}

func (x *JoinChannelByLinkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_channel_v1_channel_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinChannelByLinkResponse.ProtoReflect.Descriptor instead.
func (*JoinChannelByLinkResponse) Descriptor() ([]byte, []int) {
	return file_channel_v1_channel_proto_rawDescGZIP(), []int{9}
}

type QuitChannelRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChannelId     int64                  `protobuf:"varint,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	UserId        int64                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuitChannelRequest) Reset() {
	*x = QuitChannelRequest{}
	mi := &file_channel_v1_channel_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuitChannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuitChannelRequest) ProtoMessage() {}

func (x *QuitChannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_channel_v1_channel_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuitChannelRequest.ProtoReflect.Descriptor instead.
func (*QuitChannelRequest) Descriptor() ([]byte, []int) {
	return file_channel_v1_channel_proto_rawDescGZIP(), []int{10}
}

func (x *QuitChannelRequest) GetChannelId() int64 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *QuitChannelRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type QuitChannelResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuitChannelResponse) Reset() {
	*x = QuitChannelResponse{}
	mi := &file_channel_v1_channel_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuitChannelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuitChannelResponse) ProtoMessage() {}

func (x *QuitChannelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_channel_v1_channel_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuitChannelResponse.ProtoReflect.Descriptor instead.
func (*QuitChannelResponse) Descriptor() ([]byte, []int) {
	return file_channel_v1_channel_proto_rawDescGZIP(), []int{11}
}

type DisbandChannelRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChannelId     int64                  `protobuf:"varint,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DisbandChannelRequest) Reset() {
	*x = DisbandChannelRequest{}
	mi := &file_channel_v1_channel_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisbandChannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisbandChannelRequest) ProtoMessage() {}

func (x *DisbandChannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_channel_v1_channel_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisbandChannelRequest.ProtoReflect.Descriptor instead.
func (*DisbandChannelRequest) Descriptor() ([]byte, []int) {
	return file_channel_v1_channel_proto_rawDescGZIP(), []int{12}
}

func (x *DisbandChannelRequest) GetChannelId() int64 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

type DisbandChannelResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DisbandChannelResponse) Reset() {
	*x = DisbandChannelResponse{}
	mi := &file_channel_v1_channel_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisbandChannelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisbandChannelResponse) ProtoMessage() {}

func (x *DisbandChannelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_channel_v1_channel_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisbandChannelResponse.ProtoReflect.Descriptor instead.
func (*DisbandChannelResponse) Descriptor() ([]byte, []int) {
	return file_channel_v1_channel_proto_rawDescGZIP(), []int{13}
}

type UpdateChannelInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Channel       *Channel               `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateChannelInfoRequest) Reset() {
	*x = UpdateChannelInfoRequest{}
	mi := &file_channel_v1_channel_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateChannelInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateChannelInfoRequest) ProtoMessage() {}

func (x *UpdateChannelInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_channel_v1_channel_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateChannelInfoRequest.ProtoReflect.Descriptor instead.
func (*UpdateChannelInfoRequest) Descriptor() ([]byte, []int) {
	return file_channel_v1_channel_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateChannelInfoRequest) GetChannel() *Channel {
	if x != nil {
		return x.Channel
	}
	return nil
}

type UpdateChannelInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Channel       *Channel               `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateChannelInfoResponse) Reset() {
	*x = UpdateChannelInfoResponse{}
	mi := &file_channel_v1_channel_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateChannelInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateChannelInfoResponse) ProtoMessage() {}

func (x *UpdateChannelInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_channel_v1_channel_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateChannelInfoResponse.ProtoReflect.Descriptor instead.
func (*UpdateChannelInfoResponse) Descriptor() ([]byte, []int) {
	return file_channel_v1_channel_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateChannelInfoResponse) GetChannel() *Channel {
	if x != nil {
		return x.Channel
	}
	return nil
}

type GetChannelInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChannelId     int64                  `protobuf:"varint,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	UserId        int64                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetChannelInfoRequest) Reset() {
	*x = GetChannelInfoRequest{}
	mi := &file_channel_v1_channel_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChannelInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChannelInfoRequest) ProtoMessage() {}

func (x *GetChannelInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_channel_v1_channel_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChannelInfoRequest.ProtoReflect.Descriptor instead.
func (*GetChannelInfoRequest) Descriptor() ([]byte, []int) {
	return file_channel_v1_channel_proto_rawDescGZIP(), []int{16}
}

func (x *GetChannelInfoRequest) GetChannelId() int64 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *GetChannelInfoRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetChannelInfoByIdsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChannelIds    []int64                `protobuf:"varint,1,rep,packed,name=channel_ids,json=channelIds,proto3" json:"channel_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetChannelInfoByIdsRequest) Reset() {
	*x = GetChannelInfoByIdsRequest{}
	mi := &file_channel_v1_channel_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChannelInfoByIdsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChannelInfoByIdsRequest) ProtoMessage() {}

func (x *GetChannelInfoByIdsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_channel_v1_channel_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChannelInfoByIdsRequest.ProtoReflect.Descriptor instead.
func (*GetChannelInfoByIdsRequest) Descriptor() ([]byte, []int) {
	return file_channel_v1_channel_proto_rawDescGZIP(), []int{17}
}

func (x *GetChannelInfoByIdsRequest) GetChannelIds() []int64 {
	if x != nil {
		return x.ChannelIds
	}
	return nil
}

type GetChannelInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Channel       *Channel               `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	PersonalInfo  *ChannelPersonalInfo   `protobuf:"bytes,2,opt,name=personal_info,json=personalInfo,proto3" json:"personal_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetChannelInfoResponse) Reset() {
	*x = GetChannelInfoResponse{}
	mi := &file_channel_v1_channel_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChannelInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChannelInfoResponse) ProtoMessage() {}

func (x *GetChannelInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_channel_v1_channel_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChannelInfoResponse.ProtoReflect.Descriptor instead.
func (*GetChannelInfoResponse) Descriptor() ([]byte, []int) {
	return file_channel_v1_channel_proto_rawDescGZIP(), []int{18}
}

func (x *GetChannelInfoResponse) GetChannel() *Channel {
	if x != nil {
		return x.Channel
	}
	return nil
}

func (x *GetChannelInfoResponse) GetPersonalInfo() *ChannelPersonalInfo {
	if x != nil {
		return x.PersonalInfo
	}
	return nil
}

type GetChannelInfoByIdsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Channel       []*Channel             `protobuf:"bytes,1,rep,name=channel,proto3" json:"channel,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetChannelInfoByIdsResponse) Reset() {
	*x = GetChannelInfoByIdsResponse{}
	mi := &file_channel_v1_channel_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChannelInfoByIdsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChannelInfoByIdsResponse) ProtoMessage() {}

func (x *GetChannelInfoByIdsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_channel_v1_channel_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChannelInfoByIdsResponse.ProtoReflect.Descriptor instead.
func (*GetChannelInfoByIdsResponse) Descriptor() ([]byte, []int) {
	return file_channel_v1_channel_proto_rawDescGZIP(), []int{19}
}

func (x *GetChannelInfoByIdsResponse) GetChannel() []*Channel {
	if x != nil {
		return x.Channel
	}
	return nil
}

type GetChannelMembersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChannelId     int64                  `protobuf:"varint,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetChannelMembersRequest) Reset() {
	*x = GetChannelMembersRequest{}
	mi := &file_channel_v1_channel_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChannelMembersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChannelMembersRequest) ProtoMessage() {}

func (x *GetChannelMembersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_channel_v1_channel_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChannelMembersRequest.ProtoReflect.Descriptor instead.
func (*GetChannelMembersRequest) Descriptor() ([]byte, []int) {
	return file_channel_v1_channel_proto_rawDescGZIP(), []int{20}
}

func (x *GetChannelMembersRequest) GetChannelId() int64 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

type GetChannelMembersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        []int64                `protobuf:"varint,1,rep,packed,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetChannelMembersResponse) Reset() {
	*x = GetChannelMembersResponse{}
	mi := &file_channel_v1_channel_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChannelMembersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChannelMembersResponse) ProtoMessage() {}

func (x *GetChannelMembersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_channel_v1_channel_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChannelMembersResponse.ProtoReflect.Descriptor instead.
func (*GetChannelMembersResponse) Descriptor() ([]byte, []int) {
	return file_channel_v1_channel_proto_rawDescGZIP(), []int{21}
}

func (x *GetChannelMembersResponse) GetUserId() []int64 {
	if x != nil {
		return x.UserId
	}
	return nil
}

type CreateOneToOneChannelRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateOneToOneChannelRequest) Reset() {
	*x = CreateOneToOneChannelRequest{}
	mi := &file_channel_v1_channel_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateOneToOneChannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOneToOneChannelRequest) ProtoMessage() {}

func (x *CreateOneToOneChannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_channel_v1_channel_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOneToOneChannelRequest.ProtoReflect.Descriptor instead.
func (*CreateOneToOneChannelRequest) Descriptor() ([]byte, []int) {
	return file_channel_v1_channel_proto_rawDescGZIP(), []int{22}
}

func (x *CreateOneToOneChannelRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type CreateOneToOneChannelResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Channel       *Channel               `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateOneToOneChannelResponse) Reset() {
	*x = CreateOneToOneChannelResponse{}
	mi := &file_channel_v1_channel_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateOneToOneChannelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOneToOneChannelResponse) ProtoMessage() {}

func (x *CreateOneToOneChannelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_channel_v1_channel_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOneToOneChannelResponse.ProtoReflect.Descriptor instead.
func (*CreateOneToOneChannelResponse) Descriptor() ([]byte, []int) {
	return file_channel_v1_channel_proto_rawDescGZIP(), []int{23}
}

func (x *CreateOneToOneChannelResponse) GetChannel() *Channel {
	if x != nil {
		return x.Channel
	}
	return nil
}

// 这里的变量命名简陋了些，想表达的是user1和2没有方向之分，没加from/to这种字眼
type CreateOneToOneChannelWith2UserIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId1       int64                  `protobuf:"varint,1,opt,name=user_id1,json=userId1,proto3" json:"user_id1,omitempty"`
	UserId2       int64                  `protobuf:"varint,2,opt,name=user_id2,json=userId2,proto3" json:"user_id2,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateOneToOneChannelWith2UserIDRequest) Reset() {
	*x = CreateOneToOneChannelWith2UserIDRequest{}
	mi := &file_channel_v1_channel_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateOneToOneChannelWith2UserIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOneToOneChannelWith2UserIDRequest) ProtoMessage() {}

func (x *CreateOneToOneChannelWith2UserIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_channel_v1_channel_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOneToOneChannelWith2UserIDRequest.ProtoReflect.Descriptor instead.
func (*CreateOneToOneChannelWith2UserIDRequest) Descriptor() ([]byte, []int) {
	return file_channel_v1_channel_proto_rawDescGZIP(), []int{24}
}

func (x *CreateOneToOneChannelWith2UserIDRequest) GetUserId1() int64 {
	if x != nil {
		return x.UserId1
	}
	return 0
}

func (x *CreateOneToOneChannelWith2UserIDRequest) GetUserId2() int64 {
	if x != nil {
		return x.UserId2
	}
	return 0
}

type CreateOneToOneChannelWith2UserIDResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Channel       *Channel               `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateOneToOneChannelWith2UserIDResponse) Reset() {
	*x = CreateOneToOneChannelWith2UserIDResponse{}
	mi := &file_channel_v1_channel_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateOneToOneChannelWith2UserIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOneToOneChannelWith2UserIDResponse) ProtoMessage() {}

func (x *CreateOneToOneChannelWith2UserIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_channel_v1_channel_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOneToOneChannelWith2UserIDResponse.ProtoReflect.Descriptor instead.
func (*CreateOneToOneChannelWith2UserIDResponse) Descriptor() ([]byte, []int) {
	return file_channel_v1_channel_proto_rawDescGZIP(), []int{25}
}

func (x *CreateOneToOneChannelWith2UserIDResponse) GetChannel() *Channel {
	if x != nil {
		return x.Channel
	}
	return nil
}

// 这里之所以没传channelId，原因：如果传channelId的话用户服务需要来这里 先根据userId查到channelId，再把channelId传回来 调两次我们服务
type DisbandOneToOneChannelRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChannelId     int64                  `protobuf:"varint,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DisbandOneToOneChannelRequest) Reset() {
	*x = DisbandOneToOneChannelRequest{}
	mi := &file_channel_v1_channel_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisbandOneToOneChannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisbandOneToOneChannelRequest) ProtoMessage() {}

func (x *DisbandOneToOneChannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_channel_v1_channel_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisbandOneToOneChannelRequest.ProtoReflect.Descriptor instead.
func (*DisbandOneToOneChannelRequest) Descriptor() ([]byte, []int) {
	return file_channel_v1_channel_proto_rawDescGZIP(), []int{26}
}

func (x *DisbandOneToOneChannelRequest) GetChannelId() int64 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

type DisbandOneToOneChannelResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DisbandOneToOneChannelResponse) Reset() {
	*x = DisbandOneToOneChannelResponse{}
	mi := &file_channel_v1_channel_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisbandOneToOneChannelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisbandOneToOneChannelResponse) ProtoMessage() {}

func (x *DisbandOneToOneChannelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_channel_v1_channel_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisbandOneToOneChannelResponse.ProtoReflect.Descriptor instead.
func (*DisbandOneToOneChannelResponse) Descriptor() ([]byte, []int) {
	return file_channel_v1_channel_proto_rawDescGZIP(), []int{27}
}

var File_channel_v1_channel_proto protoreflect.FileDescriptor

const file_channel_v1_channel_proto_rawDesc = "" +
	"\n" +
	"\x18channel/v1/channel.proto\x12\n" +
	"channel.v1\"E\n" +
	"\aChannel\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x16\n" +
	"\x06avatar\x18\x03 \x01(\tR\x06avatar\"\x89\x01\n" +
	"\x13ChannelPersonalInfo\x12\x12\n" +
	"\x04note\x18\x01 \x01(\tR\x04note\x12.\n" +
	"\x13nickname_in_channel\x18\x02 \x01(\tR\x11nicknameInChannel\x12\x1a\n" +
	"\bpriority\x18\x03 \x01(\x03R\bpriority\x12\x12\n" +
	"\x04mute\x18\x04 \x01(\bR\x04mute\"C\n" +
	"\x14CreateChannelRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\x03R\x06userId\"F\n" +
	"\x15CreateChannelResponse\x12-\n" +
	"\achannel\x18\x01 \x01(\v2\x13.channel.v1.ChannelR\achannel\"N\n" +
	"\x14GetInviteLinkRequest\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x01 \x01(\x03R\tchannelId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\x03R\x06userId\"+\n" +
	"\x15GetInviteLinkResponse\x12\x12\n" +
	"\x04link\x18\x01 \x01(\tR\x04link\"L\n" +
	"\x12JoinChannelRequest\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x01 \x01(\x03R\tchannelId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\x03R\x06userId\"\x15\n" +
	"\x13JoinChannelResponse\"G\n" +
	"\x18JoinChannelByLinkRequest\x12\x12\n" +
	"\x04link\x18\x01 \x01(\tR\x04link\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\x03R\x06userId\"\x1b\n" +
	"\x19JoinChannelByLinkResponse\"L\n" +
	"\x12QuitChannelRequest\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x01 \x01(\x03R\tchannelId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\x03R\x06userId\"\x15\n" +
	"\x13QuitChannelResponse\"6\n" +
	"\x15DisbandChannelRequest\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x01 \x01(\x03R\tchannelId\"\x18\n" +
	"\x16DisbandChannelResponse\"I\n" +
	"\x18UpdateChannelInfoRequest\x12-\n" +
	"\achannel\x18\x01 \x01(\v2\x13.channel.v1.ChannelR\achannel\"J\n" +
	"\x19UpdateChannelInfoResponse\x12-\n" +
	"\achannel\x18\x01 \x01(\v2\x13.channel.v1.ChannelR\achannel\"O\n" +
	"\x15GetChannelInfoRequest\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x01 \x01(\x03R\tchannelId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\x03R\x06userId\"=\n" +
	"\x1aGetChannelInfoByIdsRequest\x12\x1f\n" +
	"\vchannel_ids\x18\x01 \x03(\x03R\n" +
	"channelIds\"\x8d\x01\n" +
	"\x16GetChannelInfoResponse\x12-\n" +
	"\achannel\x18\x01 \x01(\v2\x13.channel.v1.ChannelR\achannel\x12D\n" +
	"\rpersonal_info\x18\x02 \x01(\v2\x1f.channel.v1.ChannelPersonalInfoR\fpersonalInfo\"L\n" +
	"\x1bGetChannelInfoByIdsResponse\x12-\n" +
	"\achannel\x18\x01 \x03(\v2\x13.channel.v1.ChannelR\achannel\"9\n" +
	"\x18GetChannelMembersRequest\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x01 \x01(\x03R\tchannelId\"4\n" +
	"\x19GetChannelMembersResponse\x12\x17\n" +
	"\auser_id\x18\x01 \x03(\x03R\x06userId\"7\n" +
	"\x1cCreateOneToOneChannelRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\"N\n" +
	"\x1dCreateOneToOneChannelResponse\x12-\n" +
	"\achannel\x18\x01 \x01(\v2\x13.channel.v1.ChannelR\achannel\"_\n" +
	"'CreateOneToOneChannelWith2UserIDRequest\x12\x19\n" +
	"\buser_id1\x18\x01 \x01(\x03R\auserId1\x12\x19\n" +
	"\buser_id2\x18\x02 \x01(\x03R\auserId2\"Y\n" +
	"(CreateOneToOneChannelWith2UserIDResponse\x12-\n" +
	"\achannel\x18\x01 \x01(\v2\x13.channel.v1.ChannelR\achannel\">\n" +
	"\x1dDisbandOneToOneChannelRequest\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x01 \x01(\x03R\tchannelId\" \n" +
	"\x1eDisbandOneToOneChannelResponse2\x8b\n" +
	"\n" +
	"\x0eChannelService\x12T\n" +
	"\rCreateChannel\x12 .channel.v1.CreateChannelRequest\x1a!.channel.v1.CreateChannelResponse\x12T\n" +
	"\rGetInviteLink\x12 .channel.v1.GetInviteLinkRequest\x1a!.channel.v1.GetInviteLinkResponse\x12N\n" +
	"\vJoinChannel\x12\x1e.channel.v1.JoinChannelRequest\x1a\x1f.channel.v1.JoinChannelResponse\x12`\n" +
	"\x11JoinChannelByLink\x12$.channel.v1.JoinChannelByLinkRequest\x1a%.channel.v1.JoinChannelByLinkResponse\x12N\n" +
	"\vQuitChannel\x12\x1e.channel.v1.QuitChannelRequest\x1a\x1f.channel.v1.QuitChannelResponse\x12W\n" +
	"\x0eDisbandChannel\x12!.channel.v1.DisbandChannelRequest\x1a\".channel.v1.DisbandChannelResponse\x12`\n" +
	"\x11UpdateChannelInfo\x12$.channel.v1.UpdateChannelInfoRequest\x1a%.channel.v1.UpdateChannelInfoResponse\x12W\n" +
	"\x0eGetChannelInfo\x12!.channel.v1.GetChannelInfoRequest\x1a\".channel.v1.GetChannelInfoResponse\x12f\n" +
	"\x13GetChannelInfoByIds\x12&.channel.v1.GetChannelInfoByIdsRequest\x1a'.channel.v1.GetChannelInfoByIdsResponse\x12`\n" +
	"\x11GetChannelMembers\x12$.channel.v1.GetChannelMembersRequest\x1a%.channel.v1.GetChannelMembersResponse\x12l\n" +
	"\x15CreateOneToOneChannel\x12(.channel.v1.CreateOneToOneChannelRequest\x1a).channel.v1.CreateOneToOneChannelResponse\x12\x8d\x01\n" +
	" CreateOneToOneChannelWith2UserID\x123.channel.v1.CreateOneToOneChannelWith2UserIDRequest\x1a4.channel.v1.CreateOneToOneChannelWith2UserIDResponse\x12o\n" +
	"\x16DisbandOneToOneChannel\x12).channel.v1.DisbandOneToOneChannelRequest\x1a*.channel.v1.DisbandOneToOneChannelResponseB\xb1\x01\n" +
	"\x0ecom.channel.v1B\fChannelProtoP\x01ZHgitee.com/flycash/permission-platform/api/proto/gen/channel/v1;channelv1\xa2\x02\x03CXX\xaa\x02\n" +
	"Channel.V1\xca\x02\n" +
	"Channel\\V1\xe2\x02\x16Channel\\V1\\GPBMetadata\xea\x02\vChannel::V1b\x06proto3"

var (
	file_channel_v1_channel_proto_rawDescOnce sync.Once
	file_channel_v1_channel_proto_rawDescData []byte
)

func file_channel_v1_channel_proto_rawDescGZIP() []byte {
	file_channel_v1_channel_proto_rawDescOnce.Do(func() {
		file_channel_v1_channel_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_channel_v1_channel_proto_rawDesc), len(file_channel_v1_channel_proto_rawDesc)))
	})
	return file_channel_v1_channel_proto_rawDescData
}

var file_channel_v1_channel_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_channel_v1_channel_proto_goTypes = []any{
	(*Channel)(nil),                                  // 0: channel.v1.Channel
	(*ChannelPersonalInfo)(nil),                      // 1: channel.v1.ChannelPersonalInfo
	(*CreateChannelRequest)(nil),                     // 2: channel.v1.CreateChannelRequest
	(*CreateChannelResponse)(nil),                    // 3: channel.v1.CreateChannelResponse
	(*GetInviteLinkRequest)(nil),                     // 4: channel.v1.GetInviteLinkRequest
	(*GetInviteLinkResponse)(nil),                    // 5: channel.v1.GetInviteLinkResponse
	(*JoinChannelRequest)(nil),                       // 6: channel.v1.JoinChannelRequest
	(*JoinChannelResponse)(nil),                      // 7: channel.v1.JoinChannelResponse
	(*JoinChannelByLinkRequest)(nil),                 // 8: channel.v1.JoinChannelByLinkRequest
	(*JoinChannelByLinkResponse)(nil),                // 9: channel.v1.JoinChannelByLinkResponse
	(*QuitChannelRequest)(nil),                       // 10: channel.v1.QuitChannelRequest
	(*QuitChannelResponse)(nil),                      // 11: channel.v1.QuitChannelResponse
	(*DisbandChannelRequest)(nil),                    // 12: channel.v1.DisbandChannelRequest
	(*DisbandChannelResponse)(nil),                   // 13: channel.v1.DisbandChannelResponse
	(*UpdateChannelInfoRequest)(nil),                 // 14: channel.v1.UpdateChannelInfoRequest
	(*UpdateChannelInfoResponse)(nil),                // 15: channel.v1.UpdateChannelInfoResponse
	(*GetChannelInfoRequest)(nil),                    // 16: channel.v1.GetChannelInfoRequest
	(*GetChannelInfoByIdsRequest)(nil),               // 17: channel.v1.GetChannelInfoByIdsRequest
	(*GetChannelInfoResponse)(nil),                   // 18: channel.v1.GetChannelInfoResponse
	(*GetChannelInfoByIdsResponse)(nil),              // 19: channel.v1.GetChannelInfoByIdsResponse
	(*GetChannelMembersRequest)(nil),                 // 20: channel.v1.GetChannelMembersRequest
	(*GetChannelMembersResponse)(nil),                // 21: channel.v1.GetChannelMembersResponse
	(*CreateOneToOneChannelRequest)(nil),             // 22: channel.v1.CreateOneToOneChannelRequest
	(*CreateOneToOneChannelResponse)(nil),            // 23: channel.v1.CreateOneToOneChannelResponse
	(*CreateOneToOneChannelWith2UserIDRequest)(nil),  // 24: channel.v1.CreateOneToOneChannelWith2UserIDRequest
	(*CreateOneToOneChannelWith2UserIDResponse)(nil), // 25: channel.v1.CreateOneToOneChannelWith2UserIDResponse
	(*DisbandOneToOneChannelRequest)(nil),            // 26: channel.v1.DisbandOneToOneChannelRequest
	(*DisbandOneToOneChannelResponse)(nil),           // 27: channel.v1.DisbandOneToOneChannelResponse
}
var file_channel_v1_channel_proto_depIdxs = []int32{
	0,  // 0: channel.v1.CreateChannelResponse.channel:type_name -> channel.v1.Channel
	0,  // 1: channel.v1.UpdateChannelInfoRequest.channel:type_name -> channel.v1.Channel
	0,  // 2: channel.v1.UpdateChannelInfoResponse.channel:type_name -> channel.v1.Channel
	0,  // 3: channel.v1.GetChannelInfoResponse.channel:type_name -> channel.v1.Channel
	1,  // 4: channel.v1.GetChannelInfoResponse.personal_info:type_name -> channel.v1.ChannelPersonalInfo
	0,  // 5: channel.v1.GetChannelInfoByIdsResponse.channel:type_name -> channel.v1.Channel
	0,  // 6: channel.v1.CreateOneToOneChannelResponse.channel:type_name -> channel.v1.Channel
	0,  // 7: channel.v1.CreateOneToOneChannelWith2UserIDResponse.channel:type_name -> channel.v1.Channel
	2,  // 8: channel.v1.ChannelService.CreateChannel:input_type -> channel.v1.CreateChannelRequest
	4,  // 9: channel.v1.ChannelService.GetInviteLink:input_type -> channel.v1.GetInviteLinkRequest
	6,  // 10: channel.v1.ChannelService.JoinChannel:input_type -> channel.v1.JoinChannelRequest
	8,  // 11: channel.v1.ChannelService.JoinChannelByLink:input_type -> channel.v1.JoinChannelByLinkRequest
	10, // 12: channel.v1.ChannelService.QuitChannel:input_type -> channel.v1.QuitChannelRequest
	12, // 13: channel.v1.ChannelService.DisbandChannel:input_type -> channel.v1.DisbandChannelRequest
	14, // 14: channel.v1.ChannelService.UpdateChannelInfo:input_type -> channel.v1.UpdateChannelInfoRequest
	16, // 15: channel.v1.ChannelService.GetChannelInfo:input_type -> channel.v1.GetChannelInfoRequest
	17, // 16: channel.v1.ChannelService.GetChannelInfoByIds:input_type -> channel.v1.GetChannelInfoByIdsRequest
	20, // 17: channel.v1.ChannelService.GetChannelMembers:input_type -> channel.v1.GetChannelMembersRequest
	22, // 18: channel.v1.ChannelService.CreateOneToOneChannel:input_type -> channel.v1.CreateOneToOneChannelRequest
	24, // 19: channel.v1.ChannelService.CreateOneToOneChannelWith2UserID:input_type -> channel.v1.CreateOneToOneChannelWith2UserIDRequest
	26, // 20: channel.v1.ChannelService.DisbandOneToOneChannel:input_type -> channel.v1.DisbandOneToOneChannelRequest
	3,  // 21: channel.v1.ChannelService.CreateChannel:output_type -> channel.v1.CreateChannelResponse
	5,  // 22: channel.v1.ChannelService.GetInviteLink:output_type -> channel.v1.GetInviteLinkResponse
	7,  // 23: channel.v1.ChannelService.JoinChannel:output_type -> channel.v1.JoinChannelResponse
	9,  // 24: channel.v1.ChannelService.JoinChannelByLink:output_type -> channel.v1.JoinChannelByLinkResponse
	11, // 25: channel.v1.ChannelService.QuitChannel:output_type -> channel.v1.QuitChannelResponse
	13, // 26: channel.v1.ChannelService.DisbandChannel:output_type -> channel.v1.DisbandChannelResponse
	15, // 27: channel.v1.ChannelService.UpdateChannelInfo:output_type -> channel.v1.UpdateChannelInfoResponse
	18, // 28: channel.v1.ChannelService.GetChannelInfo:output_type -> channel.v1.GetChannelInfoResponse
	19, // 29: channel.v1.ChannelService.GetChannelInfoByIds:output_type -> channel.v1.GetChannelInfoByIdsResponse
	21, // 30: channel.v1.ChannelService.GetChannelMembers:output_type -> channel.v1.GetChannelMembersResponse
	23, // 31: channel.v1.ChannelService.CreateOneToOneChannel:output_type -> channel.v1.CreateOneToOneChannelResponse
	25, // 32: channel.v1.ChannelService.CreateOneToOneChannelWith2UserID:output_type -> channel.v1.CreateOneToOneChannelWith2UserIDResponse
	27, // 33: channel.v1.ChannelService.DisbandOneToOneChannel:output_type -> channel.v1.DisbandOneToOneChannelResponse
	21, // [21:34] is the sub-list for method output_type
	8,  // [8:21] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_channel_v1_channel_proto_init() }
func file_channel_v1_channel_proto_init() {
	if File_channel_v1_channel_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_channel_v1_channel_proto_rawDesc), len(file_channel_v1_channel_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_channel_v1_channel_proto_goTypes,
		DependencyIndexes: file_channel_v1_channel_proto_depIdxs,
		MessageInfos:      file_channel_v1_channel_proto_msgTypes,
	}.Build()
	File_channel_v1_channel_proto = out.File
	file_channel_v1_channel_proto_goTypes = nil
	file_channel_v1_channel_proto_depIdxs = nil
}
