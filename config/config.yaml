log:
  debug: true

redis:
  addr: "localhost:6379"

mq:
  kafka:
    network: "tcp"
    addr: "localhost:9092"

etcd:
  addrs:
    - "127.0.0.1:2379"
  connectTimeout: "1s"
  secure: false

cache:
  local:
    capacity: 1000000
  requestTimeout: 3000000000
  valueExpiration: 600000000000


server:
  governor:
    host: 0.0.0.0
    port: 9003
  websocket:
    host: "0.0.0.0"
    port: 9002
    # 序列化协议：支持 json, proto
    serializer: "json"
    compression:
      # 是否启用 permessage-deflate 压缩扩展
      enabled: true
      # 服务端压缩时使用的滑动窗口大小 取值范围: 8-15= 2^8 - 2^15 = 256B - 32KB
      serverMaxWindow: 15
      # 客户端压缩时使用的滑动窗口大小 取值范围: 8-15= 2^8 - 2^15 = 256B - 32KB
      clientMaxWindow: 15
      # 上下文接管: 在多条消息间保持压缩字典，利用消息间的重复内容 false 表示启用上下文接管
      serverNoContext: false
      clientNoContext: false
      level: 6
    # 消息体加密配置
    encrypt:
      # 是否启用
      enabled: true
      algorithm: "aes"  # 支持: aes, chacha20poly1305
      key: "1234567890abcdef1234567890abcdef"  # ChaCha20/AES-256需要32字节密钥
      iv: ""  # 初始化向量，留空时自动生成

backend:
  services:
    etcdKey: "gateway.backend.services"

pushMessageEvent:
  partitions: 2
  topic: "push_message_event"

retryStrategy:
  initRetryInterval: 1000000000
  maxRetryInterval: 3000000000
  maxRetries: 3

linkEvent:
  onReceiveTimeout: 3000000000